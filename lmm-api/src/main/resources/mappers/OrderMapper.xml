<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ebay.mappers.OrderMapper">
    <resultMap id="baseResultMap" type="com.ebay.models.Order">
        <id property="id" column="id"></id>
        <result property="userId" column="userId"></result>
        <result property="orderNo" column="orderNo"></result>
        <result property="orderAmount" column="orderAmount"></result>
        <result property="orderStatus" column="orderStatus"></result>
        <result property="createAt" column="createAt"></result>
        <result property="updateAt" column="updateAt"></result>
        <result property="accountId" column="accountId"></result>
        <result property="orderType" column="orderType"></result>
        <result property="payTime" column="payTime"></result>
        <result property="payType" column="payType"></result>
        <result property="tradeAt" column="tradeAt"></result>
        <result property="tradeNo" column="tradeNo"></result>
        <result property="outTradeNo" column="outTradeNo"></result>
    </resultMap>

    <select id="findUserById" resultMap="baseResultMap">
        select *
        from `order`
        WHERE id=#{id}
    </select>

    <select id="getSUserOrderList" resultMap="baseResultMap">
        select *
        from `order`
        where userId=#{userId}
    </select>

    <select id="countOrder" resultType="java.lang.Integer">
        select count(*)
        from `order`
        where userId=#{userId}
    </select>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        insert into order(userId,orderNo,orderAmount,orderStatus,accountId,orderType,payTime,payType,tradeNo,outTradeNo,createAt
        )
        values (#{userId},#{orderNo},#{orderAmount},#{orderStatus},#{accountId},#{orderType},#{payTime},#{payType},#{tradeNo},#{outTradeNo},now()
        )
    </insert>

    <select id="getOrderList" resultMap="baseResultMap">
        select *
        from `order`
        where 1=1
        <if test="orderNo != null"> and orderNo=#{orderNo}</if>
        <if test="orderAmount != null"> and orderAmount=#{orderAmount}</if>
        <if test="orderStatus != null"> and orderStatus=#{orderStatus}</if>
        <if test="orderType != null"> and orderType=#{orderType}</if>
        <if test="payTime != null"> and payTime=#{payTime}</if>
        <if test="payType != null"> and payType=#{payType}</if>
        <if test="tradeNo != null"> and tradeNo=#{tradeNo}</if>
        <if test="outTradeNo != null"> and outTradeNo=#{outTradeNo}</if>
        <if test="dateFrom != null"> and <![CDATA[ DATE_FORMAT(createAt,'%Y-%m-%d')>=#{dateFrom} ]]></if>
        <if test="dateTo != null"> and <![CDATA[ DATE_FORMAT(createAt,'%Y-%m-%d')<=#{dateTo} ]]></if>
        ORDER BY createAt desc
        <if test="start != null"> limit #{start}, #{size}</if>
    </select>

    <select id="count" resultType="java.lang.Integer">
        select count(1)
        from `order`
        where 1=1
        <if test="orderNo != null"> and orderNo=#{orderNo}</if>
        <if test="orderAmount != null"> and orderAmount=#{orderAmount}</if>
        <if test="orderStatus != null"> and orderStatus=#{orderStatus}</if>
        <if test="orderType != null"> and orderType=#{orderType}</if>
        <if test="payTime != null"> and payTime=#{payTime}</if>
        <if test="payType != null"> and payType=#{payType}</if>
        <if test="tradeNo != null"> and tradeNo=#{tradeNo}</if>
        <if test="outTradeNo != null"> and outTradeNo=#{outTradeNo}</if>
        <if test="dateFrom != null"> and <![CDATA[ DATE_FORMAT(createAt,'%Y-%m-%d')>=#{dateFrom} ]]></if>
        <if test="dateTo != null"> and <![CDATA[ DATE_FORMAT(createAt,'%Y-%m-%d')<=#{dateTo} ]]></if>
    </select>

</mapper>